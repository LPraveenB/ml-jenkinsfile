#!groovy

pipeline {
    agent any
    options {
        buildDiscarder logRotator(
                    daysToKeepStr: '16',
                    numToKeepStr: '10'
            )
    }
    stages {
        stage('build') {
            steps {
                echo 'build'
            }
        }
        stage("test"){
              steps{
                echo "pipenv run pytest"
              }
        }
        stage("publish_inference"){
              steps{
                sh "docker build -t inference-metric -f Dockerfile "
                sh "docker tag inference-metric us-west1-docker.pkg.dev/inventory-solution-382204/fd-dask-docker/dask-mlinference-image:latest"
                sh "docker push us-west1-docker.pkg.dev/inventory-solution-382204/fd-dask-docker/dask-mlinference-image:latest"
              }
        }
        stage("publish_inf_metrics"){
              steps{
                sh "docker build -t inference-metric -f Dockerfile_metrics "
                sh "docker tag inference-metric us-west1-docker.pkg.dev/inventory-solution-382204/fd-dask-docker/dask-mlinference-metric-image:latest"
                sh "docker push us-west1-docker.pkg.dev/inventory-solution-382204/fd-dask-docker/dask-mlinference-metric-image:latest"
              }
        }
    }
}
